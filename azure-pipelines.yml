# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  vmImage: windows-latest

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

steps:
- task: AzureResourceManagerTemplateDeployment@3
  inputs:
    deploymentScope: 'Resource Group'
    azureResourceManagerConnection: 'bigproject-conn'
    subscriptionId: 'aec799d0-d788-4e61-ac0f-017b5ec3300a'
    action: 'Create Or Update Resource Group'
    resourceGroupName: 'challenge-rg'
    location: 'Switzerland North'
    templateLocation: 'URL of the file'
    csmFileLink: 'https://raw.githubusercontent.com/konradKulagaAVA/challengeproject-repo/main/CreateWebApp/azuredeploy.json'
    deploymentMode: 'Incremental'
    deploymentName: 'challengeDeployment$(Build.BuildNumber)'
- task: NuGetToolInstaller@1
- script: dotnet build --configuration $(buildConfiguration)
  displayName: 'dotnet build $(buildConfiguration)'
- task: DotNetCoreCLI@2
  inputs:
    command: 'publish'
    publishWebProjects: true

- task: NuGetCommand@2
  inputs:
    restoreSolution: '$(solution)'
- task: VSBuild@1
  inputs:
    solution: '$(solution)'
    msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:DesktopBuildPackageLocation="$(build.artifactStagingDirectory)\WebApp.zip" /p:DeployIisAppPath="Default Web Site"'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

- task: VSTest@2
  inputs:
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

- task: AzureWebApp@1
  inputs:
    azureSubscription: 'bigproject-conn'
    appType: 'webApp'
    appName: 'myWebApp-rgu56dvmkqbuy'
    deployToSlotOrASE: true
    resourceGroupName: 'challenge-rg'
    slotName: 'production'
    package: '$(System.DefaultWorkingDirectory)/**/*.zip'
# Build and test ASP.NET Core projects targeting the full .NET Framework.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: 'D:\a\1\a\WebApp.zip'
    ArtifactName: 'app'
    publishLocation: 'Container'